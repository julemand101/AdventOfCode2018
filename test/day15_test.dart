// --- Day 15: Beverage Bandits ---
// https://adventofcode.com/2018/day/15

import 'package:test/test.dart';
import 'package:AdventOfCode2018/day15.dart';

void main() {
  group('Part One', () {
    test('Example 1', () {
      expect(
          solveA([
            '#######',
            '#.G...#',
            '#...EG#',
            '#.#.#G#',
            '#..G#E#',
            '#.....#',
            '#######'
          ]),
          equals(27730));
    });
    test('Example 2', () {
      expect(
          solveA([
            '#######',
            '#G..#E#',
            '#E#E.E#',
            '#G.##.#',
            '#...#E#',
            '#...E.#',
            '#######',
          ]),
          equals(36334));
    });
    test('Example 3', () {
      expect(
          solveA([
            '#######',
            '#E..EG#',
            '#.#G.E#',
            '#E.##E#',
            '#G..#.#',
            '#..E#.#',
            '#######',
          ]),
          equals(39514));
    });
    test('Example 4', () {
      expect(
          solveA([
            '#######',
            '#E.G#.#',
            '#.#G..#',
            '#G.#.G#',
            '#G..#.#',
            '#...E.#',
            '#######',
          ]),
          equals(27755));
    });
    test('Example 5', () {
      expect(
          solveA([
            '#######',
            '#.E...#',
            '#.#..G#',
            '#.###.#',
            '#E#G#G#',
            '#...#G#',
            '#######',
          ]),
          equals(28944));
    });
    test('Example 6', () {
      expect(
          solveA([
            '#########',
            '#G......#',
            '#.E.#...#',
            '#..##..G#',
            '#...##..#',
            '#...#...#',
            '#.G...G.#',
            '#.....G.#',
            '#########',
          ]),
          equals(18740));
    });
    test('Solution', () {
      expect(
          solveA([
            '################################',
            '##########..........############',
            '########G..................#####',
            '#######..G.GG...............####',
            '#######....G.......#......######',
            '########.G.G...............#E..#',
            '#######G.................#.....#',
            '########.......................#',
            '########G.....G....#.....##....#',
            '########.....#....G.........####',
            '#########..........##....E.E#.##',
            '##########G..G..........#####.##',
            '##########....#####G....####E.##',
            '######....G..#######.....#.....#',
            '###....#....#########......#####',
            '####........#########..E...#####',
            '###.........#########......#####',
            '####G....G..#########......#####',
            '####..#.....#########....#######',
            '######.......#######...E.#######',
            '###.G.....E.G.#####.....########',
            '#.....G........E.......#########',
            '#......#..#..####....#.#########',
            '#...#.........###.#..###########',
            '##............###..#############',
            '######.....E####..##############',
            '######...........###############',
            '#######....E....################',
            '######...####...################',
            '######...###....################',
            '###.....###..##..###############',
            '################################',
          ]),
          equals(257954));
    });
  });
}
